# Created by: Mourya Vulupala
# 12/22/2020

import PyQt5
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QInputDialog, QLineEdit, QLabel, QMessageBox
from _ast import Lambda
import pandas as pd
from pandas import ExcelWriter
import xlsxwriter
import numpy as np
from msilib.schema import CheckBox
import xlsxwriter
from pickle import NONE
from docutils.parsers import null
from pandas.tests.io.excel.test_xlsxwriter import xlsxwriter

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("Excel Tools")
        MainWindow.resize(975, 600)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMinimumSize(QtCore.QSize(975, 600))
        MainWindow.setMaximumSize(QtCore.QSize(975, 600))
        font = QtGui.QFont()
        font.setBold(False)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setKerning(True)
        MainWindow.setFont(font)
        MainWindow.setToolButtonStyle(QtCore.Qt.ToolButtonIconOnly)
        MainWindow.setAnimated(True)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.Title = QtWidgets.QLabel(self.centralwidget)
        self.Title.setGeometry(QtCore.QRect(20, 10, 301, 71))
        font = QtGui.QFont()
        font.setFamily("Tw Cen MT Condensed")
        font.setPointSize(47)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(75)
        font.setKerning(True)
        self.Title.setFont(font)
        self.Title.setTextInteractionFlags(QtCore.Qt.NoTextInteraction)
        self.Title.setObjectName("Title")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(200, 110, 691, 21))
        font = QtGui.QFont()
        font.setFamily("MS Reference Sans Serif")
        font.setPointSize(9)
        font.setBold(False)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setKerning(True)
        self.lineEdit.setFont(font)
        self.lineEdit.setText("")
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setGeometry(QtCore.QRect(200, 160, 691, 21))
        font = QtGui.QFont()
        font.setFamily("MS Reference Sans Serif")
        font.setPointSize(9)
        font.setBold(False)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setKerning(True)
        self.lineEdit_2.setFont(font)
        self.lineEdit_2.setText("")
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(50, 110, 121, 20))
        font = QtGui.QFont()
        font.setFamily("MS Reference Sans Serif")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(50, 160, 161, 20))
        font = QtGui.QFont()
        font.setFamily("MS Reference Sans Serif")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.checkBox = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox.setGeometry(QtCore.QRect(80, 280, 351, 21))
        self.checkBox.setObjectName("checkBox")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(50, 240, 161, 20))
        font = QtGui.QFont()
        font.setFamily("MS Reference Sans Serif")
        font.setPointSize(10)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.checkBox_2 = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_2.setGeometry(QtCore.QRect(80, 320, 331, 21))
        self.checkBox_2.setObjectName("checkBox_2")
        self.checkBox_3 = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_3.setGeometry(QtCore.QRect(80, 360, 331, 21))
        self.checkBox_3.setObjectName("checkBox_3")
        self.checkBox_5 = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_5.setGeometry(QtCore.QRect(80, 400, 461, 21))
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        self.checkBox_5.setFont(font)
        self.checkBox_5.setObjectName("checkBox_5")
        self.FileButton1 = QtWidgets.QToolButton(self.centralwidget)
        self.FileButton1.setGeometry(QtCore.QRect(900, 110, 27, 22))
        self.FileButton1.setObjectName("FileButton1")
        self.FileButton2 = QtWidgets.QToolButton(self.centralwidget)
        self.FileButton2.setGeometry(QtCore.QRect(900, 160, 27, 22))
        self.FileButton2.setObjectName("FileButton2")
        self.CompareButton = QtWidgets.QPushButton(self.centralwidget)
        self.CompareButton.setGeometry(QtCore.QRect(220, 450, 181, 31))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.CompareButton.setFont(font)
        self.CompareButton.setAutoFillBackground(False)
        self.CompareButton.setFlat(False)
        self.CompareButton.setObjectName("CompareButton")
        self.TE2 = QtWidgets.QTextEdit(self.centralwidget)
        self.TE2.setGeometry(QtCore.QRect(500, 840, 281, 101))
        self.TE2.setObjectName("TE2")
        self.three = QtWidgets.QLabel(self.centralwidget)
        self.three.setGeometry(QtCore.QRect(70, 830, 441, 41))
        font = QtGui.QFont()
        font.setFamily("MS Reference Sans Serif")
        font.setPointSize(10)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.three.setFont(font)
        self.three.setObjectName("three")
        self.two = QtWidgets.QLabel(self.centralwidget)
        self.two.setGeometry(QtCore.QRect(70, 680, 441, 41))
        font = QtGui.QFont()
        font.setFamily("MS Reference Sans Serif")
        font.setPointSize(10)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.two.setFont(font)
        self.two.setObjectName("two")
        self.TE1 = QtWidgets.QTextEdit(self.centralwidget)
        self.TE1.setGeometry(QtCore.QRect(500, 690, 281, 101))
        self.TE1.setObjectName("TE1")
        self.one = QtWidgets.QLabel(self.centralwidget)
        self.one.setGeometry(QtCore.QRect(70, 610, 441, 41))
        font = QtGui.QFont()
        font.setFamily("MS Reference Sans Serif")
        font.setPointSize(10)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.one.setFont(font)
        self.one.setObjectName("one")
        self.STATS = QtWidgets.QLabel(self.centralwidget)
        self.STATS.setGeometry(QtCore.QRect(20, 540, 191, 51))
        font = QtGui.QFont()
        font.setFamily("Modern")
        font.setPointSize(31)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.STATS.setFont(font)
        self.STATS.setObjectName("STATS")
        self.LE4 = QtWidgets.QLineEdit(self.centralwidget)
        self.LE4.setGeometry(QtCore.QRect(500, 620, 231, 22))
        self.LE4.setObjectName("LE4")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 975, 26))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.FileQuit = QtWidgets.QAction(MainWindow)
        self.FileQuit.setObjectName("FileQuit")
        self.menuFile.addSeparator()
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.FileQuit)
        self.menubar.addAction(self.menuFile.menuAction())


        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        
        # Actions Here
        self.FileQuit.triggered.connect(lambda: self.filequitaction()) # FILE QUIT
        self.FileButton1.clicked.connect(self.fileselection1)
        self.FileButton2.clicked.connect(self.fileselection2)
        self.CompareButton.clicked.connect(self.compare)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Excel Tools v1.0 (by Mourya Vulupala)"))
        MainWindow.setWindowIcon(QtGui.QIcon('./icon.png'))
        self.Title.setText(_translate("MainWindow", "Excel Tools v1.0 (by Mourya Vulupala)"))
        self.lineEdit.setPlaceholderText(_translate("MainWindow", "enter the file path of excel here"))
        self.lineEdit_2.setPlaceholderText(_translate("MainWindow", "enter the file path of excel here"))
        self.label.setText(_translate("MainWindow", "EXCEL FILE 1:"))
        self.label_2.setText(_translate("MainWindow", "EXCEL FILE 2:"))
        self.checkBox.setText(_translate("MainWindow", "Display how many individual spaces are different."))
        self.label_3.setText(_translate("MainWindow", "COMPARE TOOLS"))
        self.checkBox_2.setText(_translate("MainWindow", "Display the rows indexes that are different."))
        self.checkBox_3.setText(_translate("MainWindow", "Display the columns indexes that are different."))
        self.checkBox_5.setText(_translate("MainWindow", "Create a NEW excel with highlighted sections (of variables that don\'t match)."))
        self.FileButton1.setText(_translate("MainWindow", "..."))
        self.FileButton2.setText(_translate("MainWindow", "..."))
        self.CompareButton.setText(_translate("MainWindow", "Compare!"))
        self.three.setText(_translate("MainWindow", "Indexes of columns that are unmatched:"))
        self.two.setText(_translate("MainWindow", "Indexes of rows that are unmatched:"))
        self.one.setText(_translate("MainWindow", "# of individual spaces that DON\'T match:"))
        self.STATS.setText(_translate("MainWindow", "Statistics"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.FileQuit.setText(_translate("MainWindow", "Quit"))
        self.LE4.setReadOnly(True)
        self.TE1.setReadOnly(True)
        self.TE2.setReadOnly(True)
        
        self.STATS.hide()
        self.LE4.hide()
        self.TE1.hide()
        self.TE2.hide()
        self.one.hide()
        self.two.hide()
        self.three.hide()
    
    # Action Methods Here
    def filequitaction(self):
        sys.exit(app.exec_())
        
    def fileselection1(self):
        filename = QtWidgets.QFileDialog.getOpenFileName(caption="Open Excel 1")
        path = filename[0]
        self.lineEdit.insert(path)
        
    def fileselection2(self):
        filename = QtWidgets.QFileDialog.getOpenFileName(caption="Open Excel 2")
        path = filename[0]
        self.lineEdit_2.insert(path)
        
    def compare(self):
        dfA = pd.read_excel(self.lineEdit.displayText())
        dfB = pd.read_excel(self.lineEdit_2.displayText())
    
        comparedtable = dfA.values == dfB.values
    
        diff = 0
        differentRow = []
        differentCol = []
    
        for r in range(0,len(comparedtable)):
            for c in range(0, len(comparedtable[0])):
                if comparedtable[r][c] == False:
                    diff += 1
                    differentRow.append(r)
                    differentCol.append(c)
                    
        dR = differentRow
        dC = differentCol
           
        tempList = []
        for i in differentRow:
            if i not in tempList:
                tempList.append(i)
        differentRow = tempList
        for i in range(0, len(differentRow)):
            differentRow[i] += 1
        
        tempList = []
        for i in differentCol:
            if i not in tempList:
                tempList.append(i)
        differentCol = tempList
            
        alphabet = ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"]
        
        for i in range(0, len(differentCol)):
            differentCol[i] = alphabet[i]
            
        diffrows = str(differentRow[0])
        diffcols = differentCol[0]
        
        for i in range(1, len(differentRow)):
            diffrows += ', ' + str(differentRow[i])
        for i in range(1, len(differentCol)):
            diffcols += ', ' + differentCol[i]
        
        
                
        MainWindow.setMinimumSize(QtCore.QSize(975, 600))
        MainWindow.setMaximumSize(QtCore.QSize(975, 600))
        MainWindow.resize(975, 600)    
        
        if self.checkBox.isChecked() or self.checkBox_2.isChecked() or self.checkBox_3.isChecked():
            self.STATS.show()
        else:
            self.STATS.hide()
            
        if not self.checkBox.isChecked() and not self.checkBox_2.isChecked() and not self.checkBox_3.isChecked():
            MainWindow.setMinimumSize(QtCore.QSize(975, 600))
            MainWindow.setMaximumSize(QtCore.QSize(975, 600))
            MainWindow.resize(975, 600)
        elif self.checkBox_3.isChecked():
            MainWindow.setMinimumSize(QtCore.QSize(975, 1000))
            MainWindow.setMaximumSize(QtCore.QSize(975, 1000))
            MainWindow.resize(975, 1000)
        elif self.checkBox_2.isChecked():
            MainWindow.setMinimumSize(QtCore.QSize(975, 850))
            MainWindow.setMaximumSize(QtCore.QSize(975, 850))
            MainWindow.resize(975, 850)  
        elif self.checkBox.isChecked():
            MainWindow.setMinimumSize(QtCore.QSize(975, 700))
            MainWindow.setMaximumSize(QtCore.QSize(975, 700))
            MainWindow.resize(975, 700)    
           
        
        if self.checkBox.isChecked():   
            self.one.show()
            self.LE4.clear()
            self.LE4.show()
            self.LE4.insert(str(diff) + ' spaces')
        else:
            self.one.hide()
            self.LE4.clear()
            self.LE4.hide()
            
        if self.checkBox_2.isChecked():
            self.two.show()
            self.TE1.clear()
            self.TE1.show()
            self.TE1.insertPlainText(str(diffrows))
        else:
            self.two.hide()
            self.TE1.clear()
            self.TE1.hide()
            
        if self.checkBox_3.isChecked():
            self.three.show()
            self.TE2.clear()
            self.TE2.show()
            self.TE2.insertPlainText(str(diffcols))
        else:
            self.three.hide()
            self.TE2.clear()
            self.TE2.hide()
            
        if self.checkBox_3.isChecked():
            self.three.show()
            self.TE2.clear()
            self.TE2.show()
            self.TE2.insertPlainText(str(diffcols))
        else:
            self.three.hide()
            self.TE2.clear()
            self.TE2.hide()
                
        if self.checkBox_5.isChecked():
            filepath = QtWidgets.QFileDialog.getExistingDirectory(caption="PLEASE SELECT A FOLDER TO SAVE THE COMPARABLE EXCEL (comparable.xlsx)")
            
            dfA = pd.read_excel(self.lineEdit.displayText())
            dfB = pd.read_excel(self.lineEdit_2.displayText())
            
            comparable = dfA==dfB
            
            while not filepath:
                filepath = QtWidgets.QFileDialog.getExistingDirectory(caption="PLEASE SELECT A FOLDER TO SAVE THE COMPARABLE EXCEL (comparable.xlsx)")
            
            workbook  = xlsxwriter.Workbook(filepath+"/comparable.xlsx")
            indicate = workbook.add_format({'bg_color': 'yellow', 'border': True})
            only_border = workbook.add_format({'border': True})
            #'bold': True, 'font_color': 'red'
            worksheetA = workbook.add_worksheet('excel_1 (A)')
            worksheetB = workbook.add_worksheet('excel_2 (B)')
            print('good')
            #worksheet.write(0, 0, 'hello')
            for r in range(0, dfA.shape[0]):
                for c in range(0, dfA.shape[1]):
                    if not comparable.iat[r,c]:
                        worksheetA.write(r, c, dfA.iat[r,c], indicate)
                    else:
                        worksheetA.write(r, c, dfA.iat[r,c], only_border)
            
            for r in range(0, dfB.shape[0]):
                for c in range(0, dfA.shape[1]):
                    if not comparable.iat[r,c]:
                        worksheetB.write(r, c, dfB.iat[r,c], indicate)
                    else:
                        worksheetB.write(r, c, dfB.iat[r,c], only_border)

            workbook.close()


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    
    MainWindow.show()
    sys.exit(app.exec_())
